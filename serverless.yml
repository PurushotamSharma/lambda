service: serverless

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

functions:
  hello:
    handler: src/handler.generateRandomNumber
    timeout: 60 # seconds
    memorySize: 128 # mb

resources: # CloudFormation template syntax from here on.
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    apiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: MyAPIGateway

    apiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId: !Ref apiGatewayRestApi

    apiGatewayStage:
      Type: AWS::ApiGateway::Stage
      Properties:
        RestApiId: !Ref apiGatewayRestApi
        DeploymentId: !Ref apiGatewayDeployment
        StageName: dev

    apiGatewayMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        RestApiId: !Ref apiGatewayRestApi
        ResourceId: !GetAtt apiGatewayRestApi.RootResourceId
        HttpMethod: GET
        AuthorizationType: NONE
        Integration:
          Type: MOCK
          IntegrationResponses:
            - StatusCode: 200
              ResponseTemplates:
                application/json: |
                  {
                    "message": "Hello from API Gateway!"
                  }
          PassthroughBehavior: WHEN_NO_MATCH
          RequestTemplates:
            application/json: "{\"statusCode\": 200}"
